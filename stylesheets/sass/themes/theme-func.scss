// @import 'premade-themes/theme-default';
// @import 'premade-themes/theme-dark';
// @import 'premade-themes/theme-light';
@import 'premade-themes/theme-nature';


@mixin checkBorder($var, $percent){
    @if map-get($border-opt, border-active) {
        @if map-get($border-opt, border-theme) == 'material' {
            box-shadow: 0px 2px 3px $var * $percent;
        }
        @if map-get($border-opt, border-theme) == 'minimal' {
            border: 1px solid $var * $percent;
        }
        @else { border: map-get($border-opt, border-level) solid $var * $percent; }
    } 
    @else { border: 0; }
}

// for navbar
@each $theList, $color in $colors {
    .navi-#{$theList} {
        background: $color * 1;
        color: $color * 2.3;
        .form-inline {
            input {
                background: $color * .6;
                &:focus { background: $color * .2; }
            }
            button {
                background: $color * .7;
                color: $color * 2;
            }
        }
    }
}

// for cards and border
@each $card, $color in $colors {
    .card-bgc-#{$card}{

        @include checkBorder($color, .8);

        background: $color * 1;
        .list-group-flush { background: $color * .80; }        
        .list-g-teacher { background: $color * .88; } 
        .bgc-#{$card} { background-color: $color; }

        .butt-bg {
            background: $color * .7;
            color: $color * 1.3;
        }

        .list-g-compo {
            background: $color * 1;
            &:hover { background: $color * 0.9; }
        }

        .card-header {
            background: $color * .8;
            color: $color * 1.3; 
        }

        select, span { color: $color * .5; }

        input {
            border: 1px solid $color * .95;

            color: $color * 1.8;
            background: $color * .97;
            &:focus {
                background: $color * .89;   
                color: $color * 1.8;
            }
        }
    }
}

.pagi-bg { 
    border: 1px solid map-get($colors, secondary) * 0.85;
    background-color: map-get($colors, secondary) * 0.97; 
    color: map-get($text-colors, paraText);
}

@each $buttons, $color in $colors { .buttons-#{$buttons} { background: $color;} }
body { background: map-get($colors, secondary) * .88; }

.main {
    @include checkBorder(map-get($colors, secondary), .8);
    background: map-get($colors, secondary);
}

.navbar {
    a.nav-link {
        mix-blend-mode: exclusion;
        &:hover { color: map-get($text-colors, headerText) * 2.5; }
    } 
}

h1, h2, h3, h4, h5, h6 { color: map-get($text-colors, headerText); }
p, b, li, span.card-msg { color: map-get($text-colors, paraText); }

a {
    color: map-get($text-colors, anchorText);
    &:hover { color: map-get($text-colors, anchorText) * .5; }
}

@mixin headPara($header, $para){
    h3 { color: map-get($text-colors, anchorText) * $header; }
    p { color: map-get($text-colors, anchorText) * $para; }
}

.carousel-inner { @include headPara(2.5, 2.3); }
footer { @include headPara(1.8, 1); }



